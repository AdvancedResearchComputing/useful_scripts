#!/bin/bash
if [ -z "$1" ]; then
  echo "Usage: tcgetusage_single <account>"
  exit 1
fi

tcgus_ACCT=$1
tcgus_CHK=`sshare -a -A $tcgus_ACCT -u='' --long --format=account,grptresmins -nP`

if [[ "$tcgus_CHK" != "$tcgus_ACCT"* ]]; then
  echo "account=$tcgus_ACCT not found in sshare, quitting..."
  exit 1
fi
if [[ "$tcgus_CHK" != *"billing="* ]]; then
  echo "GrpTRESMins=billing is not set for account=$tcgus_ACCT, quitting..."
  exit 1
fi
if [[ "$2" == "quiet" ]]; then
  tcgus_QUIET="YES"
fi

tcgus_QUERY=`sshare -u='' -A $tcgus_ACCT -nP -o  ,grptresraw,rawusage,tresrunmin`
tcgus_GRPTRESMIN=`echo $tcgus_QUERY | cut -f1 -d\| | cut -f2 -d=` #!!PRESUMES only GrpTRESMin Limit set is billing!!
tcgus_GRPTRESMINRAWBILL=`echo $tcgus_QUERY | cut -f2 -d\| | cut -f5 -d, | cut -f2 -d=`
tcgus_RAWUSAGESEC=`echo $tcgus_QUERY | cut -f3 -d\|`
tcgus_TRESRUNMINBILL=`echo $tcgus_QUERY | cut -f4 -d\| | cut -f5 -d, | cut -f2 -d=`

if [[ $tcgus_QUIET != "YES" ]]; then
  echo "Data reported here are pulled from the sshare command output which is NOT REAL-TIME data, but is updated hourly."
fi
# Unscientific tests show that RAWUSAGE(in minutes) is always >= GRPTRESMINRAW(in minutes), but most often equal. So I decided to use RAWSUSAGE.
# Test if a job will run: GRPTRESMIN - (RAWUSAGE(min) + TRESRUNMIN) > (jobbilling x timelimit)
# That is the information I want to show.
if [[ ! $tcgus_QUIET ]]; then
  awk -v ACCT="ACCOUNT" -v L="Limit" -v U="Used" -v R="Running" -v A="Available"\
      'BEGIN {printf "%-25s %10s - ( %10s + %10s ) = %10s\n",ACCT,L,U,R,A; exit(0)}'
  awk -v ACCT="$tcgus_ACCT" -v L=$tcgus_GRPTRESMIN -v U=$tcgus_RAWUSAGESEC -v R=$tcgus_TRESRUNMINBILL \
      'BEGIN {printf "%-25s %10d - ( %10.1f + %10.1f ) = %10.1f\n",ACCT,L/60,U/3600,R/60,(L-(U/60+R))/60;exit(0)}'
else
  awk -v ACCT="$tcgus_ACCT" -v L=$tcgus_GRPTRESMIN -v U=$tcgus_RAWUSAGESEC -v R=$tcgus_TRESRUNMINBILL \
      'BEGIN {printf " %-24s %10d - ( %10.1f + %10.1f ) = %10.1f\n",ACCT,L/60,U/3600,R/60,(L-(U/60+R))/60;exit(0)}'
fi
unset tcgus_QUIET
